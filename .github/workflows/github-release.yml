name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create release for (e.g., v0.2.0)'
        required: true
        type: string
      draft:
        description: 'Create as draft release'
        required: false
        default: false
        type: boolean
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

env:
  RUBY_VERSION: '3.2'

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Ruby environment
      uses: ./.github/actions/setup-ruby
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        install-system-deps: true

    - name: Get version from tag
      id: version
      run: |
        TAG="${{ inputs.tag || github.ref_name }}"
        VERSION="${TAG#v}"  # Remove 'v' prefix
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "gem-file=jekyll-theme-zer0-$VERSION.gem" >> $GITHUB_OUTPUT

    - name: Validate version matches tag
      run: |
        FILE_VERSION=$(grep -o 'VERSION = "[^"]*"' lib/jekyll-theme-zer0/version.rb | sed 's/VERSION = "\(.*\)"/\1/')
        TAG_VERSION="${{ steps.version.outputs.version }}"

        if [ "$FILE_VERSION" != "$TAG_VERSION" ]; then
          echo "❌ Version mismatch:"
          echo "   File version: $FILE_VERSION"
          echo "   Tag version:  $TAG_VERSION"
          exit 1
        fi
        echo "✅ Version validation passed: $FILE_VERSION"

    - name: Build gem for release
      run: ./scripts/build.sh

    - name: Generate installation script
      run: |
        cat > install.sh << 'EOF'
        #!/bin/bash
        # Jekyll Theme Zer0 Installation Script

        VERSION="${{ steps.version.outputs.version }}"

        echo "🚀 Installing Jekyll Theme Zer0 v$VERSION"

        if command -v bundle >/dev/null 2>&1; then
          echo "📦 Adding to Gemfile..."
          if [ ! -f Gemfile ]; then
            echo 'source "https://rubygems.org"' > Gemfile
          fi
          echo 'gem "jekyll-theme-zer0", "~> '$VERSION'"' >> Gemfile
          echo "Running bundle install..."
          bundle install
        else
          echo "💎 Installing via gem..."
          gem install jekyll-theme-zer0 -v $VERSION
        fi

        echo "✅ Jekyll Theme Zer0 v$VERSION installed successfully!"
        echo "📖 Documentation: https://github.com/bamr87/zer0-mistakes#readme"
        EOF

        chmod +x install.sh

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: "🚀 Jekyll Theme Zer0 v${{ steps.version.outputs.version }}"
        body: |
          # 🎉 Jekyll Theme Zer0 v${{ steps.version.outputs.version }}

          A Bootstrap Jekyll theme for headless GitHub Pages CMS with Docker-first development approach.

          ## 📦 Installation

          ### One-liner Installation
          ```bash
          curl -fsSL https://github.com/bamr87/zer0-mistakes/releases/download/${{ steps.version.outputs.tag }}/install.sh | bash
          ```

          ### Via Bundler (Recommended)
          Add this line to your Jekyll site's `Gemfile`:
          ```ruby
          gem "jekyll-theme-zer0", "~> ${{ steps.version.outputs.version }}"
          ```

          ### Via RubyGems
          ```bash
          gem install jekyll-theme-zer0 -v ${{ steps.version.outputs.version }}
          ```

          ## 🔗 Links

          - **RubyGems**: https://rubygems.org/gems/jekyll-theme-zer0
          - **Documentation**: https://github.com/bamr87/zer0-mistakes#readme
          - **Live Demo**: https://bamr87.github.io/zer0-mistakes/
          - **Issues**: https://github.com/bamr87/zer0-mistakes/issues

          ## 🛠️ For Developers

          ### Theme Configuration
          In your `_config.yml`:
          ```yaml
          theme: jekyll-theme-zer0
          # or for GitHub Pages:
          # remote_theme: bamr87/zer0-mistakes
          ```

          ### Docker Development
          ```bash
          git clone https://github.com/bamr87/zer0-mistakes.git
          cd zer0-mistakes
          docker-compose up
          ```
        files: |
          ${{ steps.version.outputs.gem-file }}
          install.sh
        draft: ${{ inputs.draft || false }}
        prerelease: ${{ inputs.prerelease || contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}
        make_latest: ${{ !inputs.prerelease && !contains(steps.version.outputs.version, 'rc') && !contains(steps.version.outputs.version, 'beta') && !contains(steps.version.outputs.version, 'alpha') }}
        generate_release_notes: true

    - name: Release Summary
      run: |
        echo "## 🎉 GitHub Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Draft**: ${{ inputs.draft || false }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Prerelease**: ${{ inputs.prerelease || contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Assets Included:" >> $GITHUB_STEP_SUMMARY
        echo "- Ruby gem package" >> $GITHUB_STEP_SUMMARY
        echo "- Installation script" >> $GITHUB_STEP_SUMMARY
        fi
        
