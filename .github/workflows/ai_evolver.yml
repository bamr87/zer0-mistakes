name: AI Evolution Engine - Version Automation Seed

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      evolution_mode:
        description: 'Evolution mode'
        required: true
        default: 'standard'
        type: choice
        options:
        - standard
        - accelerated
        - experimental
      version_bump:
        description: 'Version bump type'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  EVOLUTION_CYCLE: 1
  GENERATION: 1
  AI_MODE: enhanced

jobs:
  evolution-validation:
    name: 🧬 Evolution Validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7', '3.0', '3.1', '3.2']
        
    steps:
    - name: 🌱 Checkout Evolution Seed
      uses: actions/checkout@v4
      
    - name: 💎 Setup Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        
    - name: 🔧 Install Evolution Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        gem install bundler
        
    - name: 📦 Install Project Dependencies
      run: |
        bundle install
        
    - name: 🧪 Run Evolution Tests
      run: |
        chmod +x scripts/*.sh
        make test
        
    - name: 🏗️ Validate Build Process
      run: |
        make build
        
    - name: 📊 Generate Evolution Metrics
      run: |
        echo "## Evolution Metrics" >> $GITHUB_STEP_SUMMARY
        echo "- Ruby Version: ${{ matrix.ruby-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tests: $(make test 2>&1 | grep 'Tests passed:' | tail -1)" >> $GITHUB_STEP_SUMMARY
        echo "- Build Status: ✅ Success" >> $GITHUB_STEP_SUMMARY

  ai-evolution-analysis:
    name: 🤖 AI Evolution Analysis
    runs-on: ubuntu-latest
    needs: evolution-validation
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 🌱 Checkout Evolution Seed
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup Evolution Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: 📈 Analyze Evolution Progress
      run: |
        # Calculate evolution metrics
        COMMITS_COUNT=$(git rev-list --count HEAD)
        LAST_VERSION=$(jq -r '.version' package.json)
        CHANGES_COUNT=$(git diff --name-only HEAD~1 HEAD | wc -l)
        
        echo "## 🧬 AI Evolution Analysis" >> $GITHUB_STEP_SUMMARY
        echo "- **Evolution Cycle**: $EVOLUTION_CYCLE" >> $GITHUB_STEP_SUMMARY
        echo "- **Generation**: $GENERATION" >> $GITHUB_STEP_SUMMARY
        echo "- **Current Version**: $LAST_VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Commits**: $COMMITS_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "- **Files Changed**: $CHANGES_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "- **AI Mode**: $AI_MODE" >> $GITHUB_STEP_SUMMARY
        
    - name: 🎯 Generate Next Evolution Recommendations
      run: |
        echo "## 🎯 Next Evolution Recommendations" >> $GITHUB_STEP_SUMMARY
        echo "- Consider version bump based on changes" >> $GITHUB_STEP_SUMMARY
        echo "- Evaluate automation script optimizations" >> $GITHUB_STEP_SUMMARY
        echo "- Review test coverage expansion opportunities" >> $GITHUB_STEP_SUMMARY
        echo "- Assess CI/CD workflow enhancements" >> $GITHUB_STEP_SUMMARY

  auto-version-evolution:
    name: 🚀 Auto Version Evolution
    runs-on: ubuntu-latest
    needs: [evolution-validation, ai-evolution-analysis]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.version_bump != ''
    
    steps:
    - name: 🌱 Checkout Evolution Seed
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 💎 Setup Ruby Environment
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: 🔧 Install Evolution Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        bundle install
        
    - name: 🧬 Execute Version Evolution
      run: |
        git config --local user.email "evolution@ai-engine.dev"
        git config --local user.name "AI Evolution Engine"
        
        chmod +x scripts/*.sh
        ./scripts/version.sh ${{ github.event.inputs.version_bump }}
        
    - name: 📤 Push Evolution Changes
      run: |
        git push origin main --tags
        
    - name: 📊 Evolution Success Report
      run: |
        NEW_VERSION=$(jq -r '.version' package.json)
        echo "## 🎉 Evolution Successful!" >> $GITHUB_STEP_SUMMARY
        echo "- **New Version**: $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Evolution Type**: ${{ github.event.inputs.version_bump }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Evolution Mode**: ${{ github.event.inputs.evolution_mode }}" >> $GITHUB_STEP_SUMMARY

  release-evolution:
    name: 📦 Release Evolution Artifacts
    runs-on: ubuntu-latest
    needs: auto-version-evolution
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 🌱 Checkout Evolution Seed
      uses: actions/checkout@v4
      
    - name: 💎 Setup Ruby Environment
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: 🔧 Prepare Evolution Release
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        bundle install
        
    - name: 🏗️ Build Evolution Artifacts
      run: |
        chmod +x scripts/*.sh
        make build
        
    - name: 🚀 Publish to RubyGems
      env:
        RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
      run: |
        if [ -n "$RUBYGEMS_API_KEY" ]; then
          mkdir -p ~/.gem
          echo ":rubygems_api_key: $RUBYGEMS_API_KEY" > ~/.gem/credentials
          chmod 600 ~/.gem/credentials
          
          ./scripts/build.sh --publish
        else
          echo "⚠️ RUBYGEMS_API_KEY not set - skipping publish"
        fi
        
    - name: 📋 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Evolution Release ${{ github.ref }}
        body: |
          ## 🧬 Evolution Release
          
          This release represents the next evolution in automated development workflows.
          
          ### 🌟 Evolution Highlights
          - Enhanced AI-powered automation
          - Improved testing and validation
          - Optimized build and deploy processes
          - Updated dependencies and compatibility
          
          ### 🚀 Installation
          ```bash
          gem install jekyll-theme-zer0
          ```
          
          ### 📊 Evolution Metrics
          - Tests: All passing ✅
          - Compatibility: Ruby 2.7+ ✅
          - Automation: Full coverage ✅
          
          **This seed is ready for planting in your projects!** 🌱
        draft: false
        prerelease: false

  evolution-monitoring:
    name: 📊 Evolution Monitoring
    runs-on: ubuntu-latest
    if: always()
    needs: [evolution-validation, ai-evolution-analysis]
    
    steps:
    - name: 📈 Monitor Evolution Health
      run: |
        echo "## 📊 Evolution Health Dashboard" >> $GITHUB_STEP_SUMMARY
        echo "- **Validation Status**: ${{ needs.evolution-validation.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **AI Analysis**: ${{ needs.ai-evolution-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Evolution Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        
    - name: 🎯 Evolution Recommendations
      run: |
        echo "## 🎯 Continuous Evolution" >> $GITHUB_STEP_SUMMARY
        echo "This seed continues to evolve with each iteration:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Automated testing and validation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ AI-enhanced development workflows" >> $GITHUB_STEP_SUMMARY  
        echo "- ✅ Continuous integration and deployment" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Self-improving processes" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Ready for the next evolution cycle!** 🚀" >> $GITHUB_STEP_SUMMARY
