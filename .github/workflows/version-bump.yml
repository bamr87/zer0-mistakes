name: Auto Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  RUBY_VERSION: '3.0'

jobs:
  version-bump:
    name: Version Bump
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Make scripts executable
      run: chmod +x scripts/*.sh
    
    - name: Run tests before version bump
      run: ./test/test_runner.sh --verbose
    
    - name: Bump version
      id: bump_version
      run: |
        ./scripts/version.sh ${{ inputs.version_type }}
        
        NEW_VERSION=$(jq -r '.version' package.json)
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Bumped version to: $NEW_VERSION"
    
    - name: Push changes and tags
      run: |
        git push origin main
        git push origin --tags
        echo "Pushed version ${{ steps.bump_version.outputs.new_version }} and tags to repository"
    
    - name: Create Pull Request (optional)
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: bump version to ${{ steps.bump_version.outputs.new_version }}"
        title: "ðŸš€ Release ${{ steps.bump_version.outputs.new_version }}"
        body: |
          ## Release ${{ steps.bump_version.outputs.new_version }}
          
          This PR contains the version bump to `${{ steps.bump_version.outputs.new_version }}`.
          
          ### Changes
          - Updated `package.json` version
          - Updated `CHANGELOG.md` (if exists)
          - Created git tag `v${{ steps.bump_version.outputs.new_version }}`
          
          ### Next Steps
          After merging this PR:
          1. The tag will trigger the release workflow
          2. Gem will be built and published to RubyGems
          3. GitHub release will be created
          
          **Auto-generated by version bump workflow**
        branch: release/${{ steps.bump_version.outputs.new_version }}
        delete-branch: true
    
    - name: Summary
      run: |
        echo "## Version Bump Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Type**: ${{ inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **New Version**: ${{ steps.bump_version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: v${{ steps.bump_version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Review and merge the pull request if created" >> $GITHUB_STEP_SUMMARY
        echo "2. The tag will trigger the release workflow automatically" >> $GITHUB_STEP_SUMMARY
        echo "3. Monitor the [release workflow](https://github.com/${{ github.repository }}/actions/workflows/gem-release.yml)" >> $GITHUB_STEP_SUMMARY
