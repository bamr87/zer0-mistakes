name: Build and Publish Gem

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to RubyGems'
        required: false
        default: false
        type: boolean

env:
  RUBY_VERSION: '3.0'

jobs:
  test:
    name: Test Gem
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    - name: Make scripts executable
      run: chmod +x scripts/*.sh
    
    - name: Run tests
      run: ./test/test_runner.sh --verbose
  
  build:
    name: Build Gem
    runs-on: ubuntu-latest
    needs: test
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      gem-file: ${{ steps.version.outputs.gem-file }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    - name: Make scripts executable
      run: chmod +x scripts/*.sh
    
    - name: Get version
      id: version
      run: |
        VERSION=$(grep -o 'VERSION = "[^"]*"' lib/jekyll-theme-zer0/version.rb | sed 's/VERSION = "\(.*\)"/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "gem-file=jekyll-theme-zer0-$VERSION.gem" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Build gem
      run: ./scripts/build.sh
    
    - name: Upload gem artifact
      uses: actions/upload-artifact@v4
      with:
        name: gem-${{ steps.version.outputs.version }}
        path: ${{ steps.version.outputs.gem-file }}
        retention-days: 30
  
  publish:
    name: Publish to RubyGems
    runs-on: ubuntu-latest
    needs: [test, build]
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch' && inputs.publish)
    
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    
    - name: Download gem artifact
      uses: actions/download-artifact@v4
      with:
        name: gem-${{ needs.build.outputs.version }}
    
    - name: Configure RubyGems credentials
      run: |
        mkdir -p ~/.gem
        cat > ~/.gem/credentials << EOF
        ---
        :rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}
        EOF
        chmod 600 ~/.gem/credentials
    
    - name: Publish gem
      run: |
        gem push ${{ needs.build.outputs.gem-file }}
        echo "Published ${{ needs.build.outputs.gem-file }} to RubyGems"
    
    - name: Extract Release Notes from Changelog
      id: extract_release_notes
      run: |
        VERSION="${{ needs.build.outputs.version }}"
        
        # Extract release notes from CHANGELOG.md for this version
        if [ -f "CHANGELOG.md" ]; then
          # Find the section for this version and extract content until next version or end
          RELEASE_NOTES=$(awk -v version="$VERSION" '
            /^## \[/ {
              if (found) exit
              if ($0 ~ "\\[" version "\\]") found=1
              next
            }
            found && /^## \[/ { exit }
            found && !/^## \[/ { print }
          ' CHANGELOG.md | sed '/^$/d' | head -n -1)
          
          if [ -n "$RELEASE_NOTES" ]; then
            echo "Found release notes for version $VERSION"
          else
            RELEASE_NOTES="- Released version $VERSION"
            echo "No specific release notes found, using default"
          fi
        else
          RELEASE_NOTES="- Released version $VERSION"
          echo "No CHANGELOG.md found, using default release notes"
        fi
        
        # Save release notes to file and environment
        echo "$RELEASE_NOTES" > release_notes.md
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "$RELEASE_NOTES" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Comprehensive GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: "🚀 Jekyll Theme Zer0 v${{ needs.build.outputs.version }}"
        body: |
          # 🎉 Jekyll Theme Zer0 v${{ needs.build.outputs.version }}
          
          A Bootstrap Jekyll theme for headless GitHub Pages CMS with Docker-first development approach.
          
          ## 📋 What's Changed
          
          ${{ env.RELEASE_NOTES }}
          
          ## 📦 Installation
          
          ### Via Bundler (Recommended)
          Add this line to your Jekyll site's `Gemfile`:
          
          ```ruby
          gem "jekyll-theme-zer0", "~> ${{ needs.build.outputs.version }}"
          ```
          
          And then execute:
          ```bash
          bundle install
          ```
          
          ### Via RubyGems
          ```bash
          gem install jekyll-theme-zer0 -v ${{ needs.build.outputs.version }}
          ```
          
          ## 🔗 Links
          
          - **RubyGems**: https://rubygems.org/gems/jekyll-theme-zer0/versions/${{ needs.build.outputs.version }}
          - **Documentation**: https://github.com/bamr87/zer0-mistakes#readme
          - **Live Demo**: https://bamr87.github.io/zer0-mistakes/
          - **Issues**: https://github.com/bamr87/zer0-mistakes/issues
          
          ## 📊 Release Assets
          
          - `${{ needs.build.outputs.gem-file }}` - The Ruby gem package
          - `release_notes.md` - Detailed release notes
          
          ## 🛠️ For Developers
          
          ### Theme Configuration
          In your `_config.yml`:
          ```yaml
          theme: jekyll-theme-zer0
          # or for GitHub Pages:
          # remote_theme: bamr87/zer0-mistakes
          ```
          
          ### Docker Development
          ```bash
          git clone https://github.com/bamr87/zer0-mistakes.git
          cd zer0-mistakes
          docker-compose up
          ```
          
          ---
          
          **Full Changelog**: https://github.com/bamr87/zer0-mistakes/compare/v${{ needs.build.outputs.version }}...HEAD
        files: |
          ${{ needs.build.outputs.gem-file }}
          release_notes.md
        draft: false
        prerelease: ${{ contains(needs.build.outputs.version, 'rc') || contains(needs.build.outputs.version, 'beta') || contains(needs.build.outputs.version, 'alpha') }}
        make_latest: true
        generate_release_notes: true
